"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _TOESUYYHcjs = require('../__chunks/TOESUYYH.cjs');


var _W6NEGVNAcjs = require('../__chunks/W6NEGVNA.cjs');
require('../__chunks/MIBORXQW.cjs');
require('../__chunks/CWQU4R75.cjs');
require('../__chunks/PDQXLIRF.cjs');
require('../__chunks/T3QB4FR3.cjs');
require('../__chunks/FVVTEJ4K.cjs');




var _6TI3NXX6cjs = require('../__chunks/6TI3NXX6.cjs');


var _L5A2ID7Scjs = require('../__chunks/L5A2ID7S.cjs');
require('../__chunks/FDRJDQ5Y.cjs');



var _7EQBAZ46cjs = require('../__chunks/7EQBAZ46.cjs');

// src/tab/tab-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
var useTabList = _6TI3NXX6cjs.createHook.call(void 0, 
  function useTabList2(_a) {
    var _b = _a, { store } = _b, props = _7EQBAZ46cjs.__objRest.call(void 0, _b, ["store"]);
    const context = _TOESUYYHcjs.useTabProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "TabList must receive a `store` prop or be wrapped in a TabProvider component."
    );
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = _L5A2ID7Scjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _TOESUYYHcjs.TabScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (store.composite) {
      props = _7EQBAZ46cjs.__spreadValues.call(void 0, {
        focusable: false
      }, props);
    }
    props = _7EQBAZ46cjs.__spreadValues.call(void 0, {
      role: "tablist",
      "aria-orientation": orientation
    }, props);
    props = _W6NEGVNAcjs.useComposite.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var TabList = _6TI3NXX6cjs.forwardRef.call(void 0, function TabList2(props) {
  const htmlProps = useTabList(props);
  return _6TI3NXX6cjs.createElement.call(void 0, TagName, htmlProps);
});



exports.TabList = TabList; exports.useTabList = useTabList;
