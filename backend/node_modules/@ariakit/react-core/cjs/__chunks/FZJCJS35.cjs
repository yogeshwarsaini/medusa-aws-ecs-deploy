"use strict";Object.defineProperty(exports, "__esModule", {value: true});


var _HLFPESUHcjs = require('./HLFPESUH.cjs');


var _UHDKHSPLcjs = require('./UHDKHSPL.cjs');


var _W6NEGVNAcjs = require('./W6NEGVNA.cjs');




var _6TI3NXX6cjs = require('./6TI3NXX6.cjs');


var _L5A2ID7Scjs = require('./L5A2ID7S.cjs');



var _7EQBAZ46cjs = require('./7EQBAZ46.cjs');

// src/menubar/menubar.tsx
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
var useMenubar = _6TI3NXX6cjs.createHook.call(void 0, 
  function useMenubar2(_a) {
    var _b = _a, {
      store: storeProp,
      composite = true,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = _7EQBAZ46cjs.__objRest.call(void 0, _b, [
      "store",
      "composite",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = _HLFPESUHcjs.useMenubarProviderContext.call(void 0, );
    storeProp = storeProp || context;
    const store = _UHDKHSPLcjs.useMenubarStore.call(void 0, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => !composite || state.orientation === "both" ? void 0 : state.orientation
    );
    props = _L5A2ID7Scjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _HLFPESUHcjs.MenubarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (composite) {
      props = _7EQBAZ46cjs.__spreadValues.call(void 0, {
        role: "menubar",
        "aria-orientation": orientation
      }, props);
    }
    props = _W6NEGVNAcjs.useComposite.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, { store, composite }, props));
    return props;
  }
);
var Menubar = _6TI3NXX6cjs.forwardRef.call(void 0, function Menubar2(props) {
  const htmlProps = useMenubar(props);
  return _6TI3NXX6cjs.createElement.call(void 0, TagName, htmlProps);
});




exports.useMenubar = useMenubar; exports.Menubar = Menubar;
