"use client";
import {
  useSelectScopedContext
} from "../__chunks/DG5U6ZEL.js";
import {
  usePopoverDismiss
} from "../__chunks/MJO3NE2M.js";
import "../__chunks/U7LK7B7X.js";
import "../__chunks/MTZPJQMC.js";
import "../__chunks/RS7LB2H4.js";
import "../__chunks/S6EF7IVO.js";
import "../__chunks/P7GR5CS5.js";
import "../__chunks/PCKO3OQ5.js";
import "../__chunks/2RSXSRCN.js";
import "../__chunks/PFRGBC2K.js";
import "../__chunks/SWN3JYXT.js";
import "../__chunks/VDHZ5F7K.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/LMDWO4NN.js";
import "../__chunks/ABQUS43J.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/select/select-dismiss.tsx
var TagName = "button";
var useSelectDismiss = createHook(
  function useSelectDismiss2(_a) {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectScopedContext();
    store = store || context;
    props = usePopoverDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var SelectDismiss = forwardRef(function SelectDismiss2(props) {
  const htmlProps = useSelectDismiss(props);
  return createElement(TagName, htmlProps);
});
export {
  SelectDismiss,
  useSelectDismiss
};
