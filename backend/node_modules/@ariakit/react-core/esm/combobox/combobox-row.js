"use client";
import {
  useCompositeRow
} from "../__chunks/J2LQO3EC.js";
import {
  useComboboxScopedContext
} from "../__chunks/S43UC3DV.js";
import "../__chunks/MTZPJQMC.js";
import "../__chunks/RS7LB2H4.js";
import "../__chunks/S6EF7IVO.js";
import "../__chunks/P7GR5CS5.js";
import "../__chunks/VDHZ5F7K.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/LMDWO4NN.js";
import "../__chunks/ABQUS43J.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/combobox/combobox-row.tsx
import { getPopupRole } from "@ariakit/core/utils/dom";
import { invariant } from "@ariakit/core/utils/misc";
var TagName = "div";
var useComboboxRow = createHook(
  function useComboboxRow2(_a) {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useComboboxScopedContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "ComboboxRow must be wrapped in a ComboboxList or ComboboxPopover component"
    );
    const contentElement = store.useState("contentElement");
    const popupRole = getPopupRole(contentElement);
    const role = popupRole === "grid" ? "row" : "presentation";
    props = __spreadValues({ role }, props);
    props = useCompositeRow(__spreadValues({ store }, props));
    return props;
  }
);
var ComboboxRow = forwardRef(function ComboboxRow2(props) {
  const htmlProps = useComboboxRow(props);
  return createElement(TagName, htmlProps);
});
export {
  ComboboxRow,
  useComboboxRow
};
