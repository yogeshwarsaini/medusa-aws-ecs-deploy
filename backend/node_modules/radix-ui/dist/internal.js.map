{
  "version": 3,
  "sources": ["../src/internal.ts"],
  "sourcesContent": ["import { Primitive as BasePrimitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nexport * as ArrowPrimitive from '@radix-ui/react-arrow';\nexport * as Collection from '@radix-ui/react-collection';\nexport { composeRefs, useComposedRefs } from '@radix-ui/react-compose-refs';\nexport * as Context from '@radix-ui/react-context';\nexport * as DismissableLayer from '@radix-ui/react-dismissable-layer';\nexport * as FocusGuards from '@radix-ui/react-focus-guards';\nexport * as FocusScope from '@radix-ui/react-focus-scope';\nexport * as Menu from '@radix-ui/react-menu';\nexport * as Popper from '@radix-ui/react-popper';\nexport * as Presence from '@radix-ui/react-presence';\nexport type { PrimitivePropsWithRef } from '@radix-ui/react-primitive';\nexport * as RovingFocus from '@radix-ui/react-roving-focus';\nexport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nexport { useControllableState } from '@radix-ui/react-use-controllable-state';\nexport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\nexport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nexport { useSize } from '@radix-ui/react-use-size';\nexport { composeEventHandlers } from '@radix-ui/primitive';\n\nconst Primitive = BasePrimitive as typeof BasePrimitive & {\n  Root: typeof BasePrimitive;\n  dispatchDiscreteCustomEvent: typeof dispatchDiscreteCustomEvent;\n};\nPrimitive.dispatchDiscreteCustomEvent = dispatchDiscreteCustomEvent;\nPrimitive.Root = BasePrimitive;\nexport { Primitive };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwE;AACxE,qBAAgC;AAChC,iBAA4B;AAC5B,gCAA6C;AAC7C,cAAyB;AACzB,uBAAkC;AAClC,kBAA6B;AAC7B,iBAA4B;AAC5B,WAAsB;AACtB,aAAwB;AACxB,eAA0B;AAE1B,kBAA6B;AAC7B,oCAA+B;AAC/B,0CAAqC;AACrC,sCAAiC;AACjC,qCAAgC;AAChC,4BAAwB;AACxB,uBAAqC;AAErC,IAAM,YAAY,uBAAAA;AAIlB,UAAU,8BAA8B;AACxC,UAAU,OAAO,uBAAAA;",
  "names": ["BasePrimitive"]
}
