{"version":3,"file":"data-table-filter-bar.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/components/data-table-filter-bar.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,eAAe,EAAE,MAAM,kDAAkD,CAAA;AAClF,OAAO,EAAE,mBAAmB,EAAE,MAAM,oDAAoD,CAAA;AACxF,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAA;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAA;AAMhD,MAAM,kBAAkB,GAAG,CAAC,EAC1B,oBAAoB,GAAG,WAAW,GACV,EAAE,EAAE;IAC5B,MAAM,EAAE,QAAQ,EAAE,GAAG,mBAAmB,EAAE,CAAA;IAE1C,MAAM,WAAW,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAA;IAE3C,MAAM,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;QAC1C,QAAQ,CAAC,YAAY,EAAE,CAAA;IACzB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAEd,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAA;IAEnD,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;QACtB,OAAO,IAAI,CAAA;IACb,CAAC;IAED,IAAI,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1B,OAAO,oBAAC,0BAA0B,IAAC,WAAW,EAAE,WAAW,GAAI,CAAA;IACjE,CAAC;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,4GAA4G;QACxH,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CACjD,oBAAC,eAAe,IAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,GAAI,CACrD,CAAC;QACD,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CACjB,oBAAC,MAAM,IACL,OAAO,EAAC,aAAa,EACrB,IAAI,EAAC,OAAO,EACZ,SAAS,EAAC,0EAA0E,EACpF,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,YAAY,IAEpB,oBAAoB,CACd,CACV,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAA;AACH,CAAC,CAAA;AACD,kBAAkB,CAAC,WAAW,GAAG,qBAAqB,CAAA;AAEtD,MAAM,0BAA0B,GAAG,CAAC,EAClC,WAAW,GAGZ,EAAE,EAAE;IACH,OAAO,CACL,6BAAK,SAAS,EAAC,4GAA4G;QACxH,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CACrD,oBAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,eAAe,GAAG,CACnD,CAAC;QACD,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,oBAAC,QAAQ,IAAC,SAAS,EAAC,cAAc,GAAG,CAAC,CAAC,CAAC,IAAI,CAC3D,CACP,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAE,kBAAkB,EAAE,CAAA","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { DataTableFilter } from \"@/blocks/data-table/components/data-table-filter\"\nimport { useDataTableContext } from \"@/blocks/data-table/context/use-data-table-context\"\nimport { Button } from \"@/components/button\"\nimport { Skeleton } from \"@/components/skeleton\"\n\ninterface DataTableFilterBarProps {\n  clearAllFiltersLabel?: string\n}\n\nconst DataTableFilterBar = ({\n  clearAllFiltersLabel = \"Clear all\",\n}: DataTableFilterBarProps) => {\n  const { instance } = useDataTableContext()\n\n  const filterState = instance.getFiltering()\n\n  const clearFilters = React.useCallback(() => {\n    instance.clearFilters()\n  }, [instance])\n\n  const filterCount = Object.keys(filterState).length\n\n  if (filterCount === 0) {\n    return null\n  }\n\n  if (instance.showSkeleton) {\n    return <DataTableFilterBarSkeleton filterCount={filterCount} />\n  }\n\n  return (\n    <div className=\"bg-ui-bg-subtle flex w-full flex-nowrap items-center gap-2 overflow-x-auto border-t px-6 py-2 md:flex-wrap\">\n      {Object.entries(filterState).map(([id, filter]) => (\n        <DataTableFilter key={id} id={id} filter={filter} />\n      ))}\n      {filterCount > 0 ? (\n        <Button\n          variant=\"transparent\"\n          size=\"small\"\n          className=\"text-ui-fg-muted hover:text-ui-fg-subtle flex-shrink-0 whitespace-nowrap\"\n          type=\"button\"\n          onClick={clearFilters}\n        >\n          {clearAllFiltersLabel}\n        </Button>\n      ) : null}\n    </div>\n  )\n}\nDataTableFilterBar.displayName = \"DataTable.FilterBar\"\n\nconst DataTableFilterBarSkeleton = ({\n  filterCount,\n}: {\n  filterCount: number\n}) => {\n  return (\n    <div className=\"bg-ui-bg-subtle flex w-full flex-nowrap items-center gap-2 overflow-x-auto border-t px-6 py-2 md:flex-wrap\">\n      {Array.from({ length: filterCount }).map((_, index) => (\n        <Skeleton key={index} className=\"h-7 w-[180px]\" />\n      ))}\n      {filterCount > 0 ? <Skeleton className=\"h-7 w-[66px]\" /> : null}\n    </div>\n  )\n}\n\nexport { DataTableFilterBar }\nexport type { DataTableFilterBarProps }\n\n"]}