{"version":3,"file":"data-table-table.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/components/data-table-table.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { Table } from \"@/components/table\"\nimport { flexRender } from \"@tanstack/react-table\"\n\nimport { useDataTableContext } from \"@/blocks/data-table/context/use-data-table-context\"\nimport { Skeleton } from \"@/components/skeleton\"\nimport { Text } from \"@/components/text\"\nimport { clx } from \"@/utils/clx\"\nimport {\n  DataTableEmptyState,\n  DataTableEmptyStateContent,\n  DataTableEmptyStateProps,\n} from \"../types\"\nimport { DataTableSortingIcon } from \"./data-table-sorting-icon\"\n\ninterface DataTableTableProps {\n  /**\n   * The empty state to display when the table is empty.\n   */\n  emptyState?: DataTableEmptyStateProps\n}\n\n/**\n * This component renders the table in a data table, supporting advanced features.\n */\nconst DataTableTable = (props: DataTableTableProps) => {\n  const hoveredRowId = React.useRef<string | null>(null)\n  const isKeyDown = React.useRef(false)\n\n  const [showStickyBorder, setShowStickyBorder] = React.useState(false)\n  const scrollableRef = React.useRef<HTMLDivElement>(null)\n\n  const { instance } = useDataTableContext()\n\n  const pageIndex = instance.pageIndex\n\n  const columns = instance.getAllColumns()\n\n  const hasSelect = columns.find((c) => c.id === \"select\")\n  const hasActions = columns.find((c) => c.id === \"action\")\n\n  React.useEffect(() => {\n    const onKeyDownHandler = (event: KeyboardEvent) => {\n      // If an editable element is focused, we don't want to select a row\n      const isEditableElementFocused = getIsEditableElementFocused()\n\n      if (\n        event.key.toLowerCase() === \"x\" &&\n        hoveredRowId &&\n        !isKeyDown.current &&\n        !isEditableElementFocused\n      ) {\n        isKeyDown.current = true\n\n        const row = instance\n          .getRowModel()\n          .rows.find((r) => r.id === hoveredRowId.current)\n\n        if (row && row.getCanSelect()) {\n          row.toggleSelected()\n        }\n      }\n    }\n\n    const onKeyUpHandler = (event: KeyboardEvent) => {\n      if (event.key.toLowerCase() === \"x\") {\n        isKeyDown.current = false\n      }\n    }\n\n    document.addEventListener(\"keydown\", onKeyDownHandler)\n    document.addEventListener(\"keyup\", onKeyUpHandler)\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDownHandler)\n      document.removeEventListener(\"keyup\", onKeyUpHandler)\n    }\n  }, [hoveredRowId, instance])\n\n  const handleHorizontalScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const scrollLeft = e.currentTarget.scrollLeft\n\n    if (scrollLeft > 0) {\n      setShowStickyBorder(true)\n    } else {\n      setShowStickyBorder(false)\n    }\n  }\n\n  React.useEffect(() => {\n    scrollableRef.current?.scroll({ top: 0, left: 0 })\n  }, [pageIndex])\n\n  if (instance.showSkeleton) {\n    return <DataTableTableSkeleton pageSize={instance.pageSize} />\n  }\n\n  return (\n    <div className=\"flex w-full flex-1 flex-col overflow-hidden\">\n      {instance.emptyState === DataTableEmptyState.POPULATED && (\n        <div\n          ref={scrollableRef}\n          onScroll={handleHorizontalScroll}\n          className=\"min-h-0 w-full flex-1 overflow-auto overscroll-none border-y\"\n        >\n          <Table className=\"relative isolate w-full\">\n            <Table.Header\n              className=\"shadow-ui-border-base sticky inset-x-0 top-0 z-[1] w-full border-b-0 border-t-0 shadow-[0_1px_1px_0]\"\n              style={{ transform: \"translate3d(0,0,0)\" }}\n            >\n              {instance.getHeaderGroups().map((headerGroup) => (\n                <Table.Row\n                  key={headerGroup.id}\n                  className={clx(\"border-b-0\", {\n                    \"[&_th:last-of-type]:w-[1%] [&_th:last-of-type]:whitespace-nowrap\":\n                      hasActions,\n                    \"[&_th:first-of-type]:w-[1%] [&_th:first-of-type]:whitespace-nowrap\":\n                      hasSelect,\n                  })}\n                >\n                  {headerGroup.headers.map((header, idx) => {\n                    const canSort = header.column.getCanSort()\n                    const sortDirection = header.column.getIsSorted()\n                    const sortHandler = header.column.getToggleSortingHandler()\n\n                    const isActionHeader = header.id === \"action\"\n                    const isSelectHeader = header.id === \"select\"\n                    const isSpecialHeader = isActionHeader || isSelectHeader\n\n                    const Wrapper = canSort ? \"button\" : \"div\"\n                    const isFirstColumn = hasSelect ? idx === 1 : idx === 0\n\n                    return (\n                      <Table.HeaderCell\n                        key={header.id}\n                        className={clx(\"whitespace-nowrap\", {\n                          \"w-[calc(20px+24px+24px)] min-w-[calc(20px+24px+24px)] max-w-[calc(20px+24px+24px)]\":\n                            isSelectHeader,\n                          \"w-[calc(28px+24px+4px)] min-w-[calc(28px+24px+4px)] max-w-[calc(28px+24px+4px)]\":\n                            isActionHeader,\n                          \"after:absolute after:inset-y-0 after:right-0 after:h-full after:w-px after:bg-transparent after:content-['']\":\n                            isFirstColumn,\n                          \"after:bg-ui-border-base\":\n                            showStickyBorder && isFirstColumn,\n                          \"bg-ui-bg-subtle sticky\":\n                            isFirstColumn || isSelectHeader,\n                          \"left-0\":\n                            isSelectHeader || (isFirstColumn && !hasSelect),\n                          \"left-[calc(20px+24px+24px)]\":\n                            isFirstColumn && hasSelect,\n                        })}\n                        style={\n                          !isSpecialHeader\n                            ? {\n                                width: header.column.columnDef.size,\n                                maxWidth: header.column.columnDef.maxSize,\n                                minWidth: header.column.columnDef.minSize,\n                              }\n                            : undefined\n                        }\n                      >\n                        <Wrapper\n                          type={canSort ? \"button\" : undefined}\n                          onClick={canSort ? sortHandler : undefined}\n                          className={clx(\n                            \"group flex w-fit cursor-default items-center gap-2\",\n                            {\n                              \"cursor-pointer\": canSort,\n                            }\n                          )}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          {canSort && (\n                            <DataTableSortingIcon direction={sortDirection} />\n                          )}\n                        </Wrapper>\n                      </Table.HeaderCell>\n                    )\n                  })}\n                </Table.Row>\n              ))}\n            </Table.Header>\n            <Table.Body className=\"border-b-0 border-t-0\">\n              {instance.getRowModel().rows.map((row) => {\n                return (\n                  <Table.Row\n                    key={row.id}\n                    onMouseEnter={() => (hoveredRowId.current = row.id)}\n                    onMouseLeave={() => (hoveredRowId.current = null)}\n                    onClick={(e) => instance.onRowClick?.(e, row)}\n                    className={clx(\"group/row last-of-type:border-b-0\", {\n                      \"cursor-pointer\": !!instance.onRowClick,\n                    })}\n                  >\n                    {row.getVisibleCells().map((cell, idx) => {\n                      const isSelectCell = cell.column.id === \"select\"\n                      const isActionCell = cell.column.id === \"action\"\n                      const isSpecialCell = isSelectCell || isActionCell\n\n                      const isFirstColumn = hasSelect ? idx === 1 : idx === 0\n\n                      return (\n                        <Table.Cell\n                          key={cell.id}\n                          className={clx(\n                            \"items-stretch truncate whitespace-nowrap\",\n                            {\n                              \"w-[calc(20px+24px+24px)] min-w-[calc(20px+24px+24px)] max-w-[calc(20px+24px+24px)]\":\n                                isSelectCell,\n                              \"w-[calc(28px+24px+4px)] min-w-[calc(28px+24px+4px)] max-w-[calc(28px+24px+4px)]\":\n                                isActionCell,\n                              \"bg-ui-bg-base group-hover/row:bg-ui-bg-base-hover transition-fg sticky h-full\":\n                                isFirstColumn || isSelectCell,\n                              \"after:absolute after:inset-y-0 after:right-0 after:h-full after:w-px after:bg-transparent after:content-['']\":\n                                isFirstColumn,\n                              \"after:bg-ui-border-base\":\n                                showStickyBorder && isFirstColumn,\n                              \"left-0\":\n                                isSelectCell || (isFirstColumn && !hasSelect),\n                              \"left-[calc(20px+24px+24px)]\":\n                                isFirstColumn && hasSelect,\n                            }\n                          )}\n                          style={\n                            !isSpecialCell\n                              ? {\n                                  width: cell.column.columnDef.size,\n                                  maxWidth: cell.column.columnDef.maxSize,\n                                  minWidth: cell.column.columnDef.minSize,\n                                }\n                              : undefined\n                          }\n                        >\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </Table.Cell>\n                      )\n                    })}\n                  </Table.Row>\n                )\n              })}\n            </Table.Body>\n          </Table>\n        </div>\n      )}\n      <DataTableEmptyStateDisplay\n        state={instance.emptyState}\n        props={props.emptyState}\n      />\n    </div>\n  )\n}\nDataTableTable.displayName = \"DataTable.Table\"\n\ninterface DataTableEmptyStateDisplayProps {\n  state: DataTableEmptyState\n  props?: DataTableEmptyStateProps\n}\n\nconst DefaultEmptyStateContent = ({\n  heading,\n  description,\n}: DataTableEmptyStateContent) => (\n  <div className=\"flex size-full flex-col items-center justify-center gap-2\">\n    <Text size=\"base\" weight=\"plus\">\n      {heading}\n    </Text>\n    <Text>{description}</Text>\n  </div>\n)\n\nconst DataTableEmptyStateDisplay = ({\n  state,\n  props,\n}: DataTableEmptyStateDisplayProps) => {\n  if (state === DataTableEmptyState.POPULATED) {\n    return null\n  }\n\n  const content =\n    state === DataTableEmptyState.EMPTY ? props?.empty : props?.filtered\n\n  return (\n    <div className=\"flex min-h-[250px] w-full flex-1 flex-col items-center justify-center border-y px-6 py-4\">\n      {content?.custom ?? (\n        <DefaultEmptyStateContent\n          heading={content?.heading}\n          description={content?.description}\n        />\n      )}\n    </div>\n  )\n}\n\ninterface DataTableTableSkeletonProps {\n  pageSize?: number\n}\n\nconst DataTableTableSkeleton = ({\n  pageSize = 10,\n}: DataTableTableSkeletonProps) => {\n  return (\n    <div className=\"flex w-full flex-1 flex-col overflow-hidden\">\n      <div className=\"min-h-0 w-full flex-1 overscroll-none border-y\">\n        <div className=\"flex flex-col divide-y\">\n          <Skeleton className=\"h-12 w-full\" />\n          {Array.from({ length: pageSize }, (_, i) => i).map((row) => (\n            <Skeleton key={row} className=\"h-12 w-full rounded-none\" />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction getIsEditableElementFocused() {\n  const activeElement = !!document ? document.activeElement : null\n  const isEditableElementFocused =\n    activeElement instanceof HTMLInputElement ||\n    activeElement instanceof HTMLTextAreaElement ||\n    activeElement?.getAttribute(\"contenteditable\") === \"true\"\n\n  return isEditableElementFocused\n}\n\nexport { DataTableTable }\nexport type { DataTableEmptyStateProps, DataTableTableProps }\n"]}