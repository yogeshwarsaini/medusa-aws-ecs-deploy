{"version":3,"file":"date-segment.js","sourceRoot":"","sources":["../../../../src/components/date-segment/date-segment.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,cAAc,EAAE,MAAM,YAAY,CAAA;AAG3C,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AAOjC,MAAM,WAAW,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,EAAoB,EAAE,EAAE;IAC3D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAA;IAC9C,MAAM,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;IAE5D,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,CAAA;IAEnE;;;OAGG;IACH,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,8BAAM,SAAS,EAAC,MAAM,GAAG,CAAA;IAClC,CAAC;IAED,OAAO;IACL;;;;;OAKG;IACH;QACE,6BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,GAAG,CACZ,4BAA4B,EAC5B,sEAAsE,EACtE;gBACE,4BAA4B,EAAE,OAAO,CAAC,aAAa;gBACnD,kBAAkB,EAAE,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,KAAK;aACxD,CACF,KACG,YAAY,IAEf,OAAO,CAAC,IAAI,CACT,CACD,CACR,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAE,WAAW,EAAE,CAAA","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useDateSegment } from \"react-aria\"\nimport { DateFieldState, DateSegment as Segment } from \"react-stately\"\n\nimport { clx } from \"@/utils/clx\"\n\ninterface DateSegmentProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  segment: Segment\n  state: DateFieldState\n}\n\nconst DateSegment = ({ segment, state }: DateSegmentProps) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const { segmentProps } = useDateSegment(segment, state, ref)\n\n  const isComma = segment.type === \"literal\" && segment.text === \", \"\n\n  /**\n   * We render an empty span with a margin to maintain the correct spacing\n   * between date and time segments.\n   */\n  if (isComma) {\n    return <span className=\"mx-1\" />\n  }\n\n  return (\n    /**\n     * We wrap the segment in a span to prevent the segment from being\n     * focused when the user clicks outside of the component.\n     *\n     * See: https://github.com/adobe/react-spectrum/issues/3164\n     */\n    <span>\n      <div\n        ref={ref}\n        className={clx(\n          \"transition-fg outline-none\",\n          \"focus-visible:bg-ui-bg-interactive focus-visible:text-ui-fg-on-color\",\n          {\n            \"text-ui-fg-muted uppercase\": segment.isPlaceholder,\n            \"text-ui-fg-muted\": !segment.isEditable && !state.value,\n          }\n        )}\n        {...segmentProps}\n      >\n        {segment.text}\n      </div>\n    </span>\n  )\n}\n\nexport { DateSegment }\n"]}