{"version":3,"file":"date-picker.js","sourceRoot":"","sources":["../../../../src/components/date-picker/date-picker.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAGL,gBAAgB,GACjB,MAAM,yBAAyB,CAAA;AAChC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAChE,OAAO,EAAE,GAAG,EAAE,MAAM,KAAK,CAAA;AACzB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAEL,aAAa,EACb,kBAAkB,GAEnB,MAAM,YAAY,CAAA;AACnB,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAA;AAElD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAA;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAEnD,OAAO,EACL,0BAA0B,EAC1B,8BAA8B,EAC9B,0BAA0B,GAC3B,MAAM,kBAAkB,CAAA;AACzB,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AAEjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAA;AAClE,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AAuBrD,MAAM,gBAAgB,GAAG,CACvB,MAAe,EACf,SAAkB,EAClB,KAAwB,EACxB,EAAE,CACF,GAAG,CAAC;IACF,IAAI,EAAE,GAAG,CACP,6IAA6I,EAC7I,0GAA0G,EAC1G,uEAAuE,EACvE;QACE,wCAAwC,EAAE,MAAM;QAChD,sBAAsB,EAAE,SAAS;QACjC,MAAM,EAAE,CAAC,KAAK;KACf,CACF;IACD,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,KAAK,EAAE,GAAG,CAAC,sBAAsB,EAAE;gBACjC,2BAA2B,EAAE,CAAC,CAAC,KAAK;aACrC,CAAC;YACF,IAAI,EAAE,GAAG,CAAC,sBAAsB,EAAE;gBAChC,2BAA2B,EAAE,CAAC,CAAC,KAAK;aACrC,CAAC;SACH;KACF;CACF,CAAC,CAAA;AAEJ,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAA;AAEnE,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CACjC,CACE,EACE,IAAI,GAAG,MAAM,EACb,mBAAmB,GAAG,IAAI,EAC1B,SAAS,EACT,KAAK,GAAG,KAAK,EACb,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAGtC,8BAA8B,CAC5B,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,YAAY,EAClB,KAAK,CAAC,WAAW,CAClB,CACF,CAAA;IAED,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAA;IACnD,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAyB,CAAC,CAAA;IAExE,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAA;IAErD,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IAE5C,MAAM,KAAK,GAAG,kBAAkB,CAAC;QAC/B,GAAG,MAAM;QACT,mBAAmB;KACpB,CAAC,CAAA;IAEF,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,GACvE,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;IAExC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,QAAQ,CACN,KAAK,CAAC,KAAK;YACT,CAAC,CAAC,0BAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC;YACnE,CAAC,CAAC,IAAI,CACT,CAAA;QACD,KAAK,CAAC,QAAQ,CACZ,KAAK,CAAC,KAAK;YACT,CAAC,CAAC,0BAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC;YACnE,CAAC,CAAC,IAAI,CACT,CAAA;IACH,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;IAEjB,SAAS,KAAK,CAAC,CAAsC;;QACnD,CAAC,CAAC,cAAc,EAAE,CAAA;QAClB,CAAC,CAAC,eAAe,EAAE,CAAA;QAEnB,MAAA,KAAK,CAAC,QAAQ,sDAAG,IAAI,CAAC,CAAA;QACtB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IACtB,CAAC;IAED,kBAAkB,CAAC;QACjB,GAAG,EAAE,UAAU;QACf,iBAAiB,EAAE,GAAG,EAAE;YACtB,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QACtB,CAAC;KACF,CAAC,CAAA;IAEF,MAAM,OAAO,GAAG,KAAK,CAAC,WAAW,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACpE,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAA;IAE3C,OAAO,CACL,oBAAC,OAAO,IAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,OAAO;QACpE,oBAAC,OAAO,CAAC,MAAM,IAAC,OAAO;YACrB,6BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,GAAG,CACZ,gBAAgB,CACd,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,KAAK,CACZ,CAAC,EAAE,IAAI,EAAE,CAAC,EACX,SAAS,CACV,KACG,UAAU;gBAEd,oBAAC,gBAAgB,OAAK,WAAW,EAAE,IAAI,EAAE,IAAI;oBAC3C,oBAAC,IAAI,OAAG,CACS;gBACnB,oBAAC,eAAe,OAAK,UAAU,EAAE,IAAI,EAAE,IAAI,GAAI;gBAC9C,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAChB,oBAAC,qBAAqB,IAAC,OAAO,EAAE,KAAK;oBACnC,oBAAC,SAAS,OAAG,CACS,CACzB,CACG,CACS;QACjB,oBAAC,OAAO,CAAC,OAAO,IACd,GAAG,EAAE,UAAU,KACX,WAAW,EACf,SAAS,EAAC,4BAA4B;YAEtC,6BAAK,SAAS,EAAC,KAAK;gBAClB,oBAAC,gBAAgB,IAAC,SAAS,WAAK,aAAa,GAAI,CAC7C;YACL,KAAK,CAAC,OAAO,IAAI,CAChB,6BAAK,SAAS,EAAC,KAAK;gBAClB,oBAAC,SAAS,IACR,KAAK,EAAE,KAAK,CAAC,SAAS,EACtB,QAAQ,EAAE,KAAK,CAAC,YAAY,EAC5B,SAAS,EAAE,KAAK,CAAC,SAAS,GAC1B,CACE,CACP,CACe,CACV,CACX,CAAA;AACH,CAAC,CACF,CAAA;AACD,UAAU,CAAC,WAAW,GAAG,YAAY,CAAA;AAErC,SAAS,YAAY,CACnB,KAAsB,EACtB,QAEC;IAED,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,iBAAiB,EAAE,kBAAkB,EACrC,QAAQ,EAAE,SAAS,EACnB,KAAK,EAAE,SAAS,EAChB,YAAY,EAAE,gBAAgB,EAC9B,GAAG,IAAI,EACR,GAAG,KAAK,CAAA;IAET,MAAM,QAAQ,GAAG,CAAC,KAAiD,EAAE,EAAE;QACrE,QAAQ,CAAC,KAAK,CAAC,CAAA;QACf,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IAC9D,CAAC,CAAA;IAED,MAAM,iBAAiB,GAAG,CAAC,IAAe,EAAE,EAAE;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAA;QAE7C,OAAO,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;IAC/D,CAAC,CAAA;IAED,OAAO;QACL,GAAG,IAAI;QACP,QAAQ,EAAE,QAEG;QACb,iBAAiB;QACjB,QAAQ,EAAE,QAAQ;YAChB,CAAC,CAAC,0BAA0B,CAAC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC;YACzD,CAAC,CAAC,QAAQ;QACZ,QAAQ,EAAE,QAAQ;YAChB,CAAC,CAAC,0BAA0B,CAAC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC;YACzD,CAAC,CAAC,QAAQ;KACb,CAAA;AACH,CAAC;AAED,OAAO,EAAE,UAAU,EAAoB,CAAA","sourcesContent":["\"use client\"\n\nimport {\n  CalendarDate,\n  CalendarDateTime,\n  getLocalTimeZone,\n} from \"@internationalized/date\"\nimport { CalendarMini, Clock, XMarkMini } from \"@medusajs/icons\"\nimport { cva } from \"cva\"\nimport * as React from \"react\"\nimport {\n  DateValue,\n  useDatePicker,\n  useInteractOutside,\n  type AriaDatePickerProps as BaseDatePickerProps,\n} from \"react-aria\"\nimport { useDatePickerState } from \"react-stately\"\n\nimport { InternalCalendar } from \"@/components/calendar\"\nimport { Popover } from \"@/components/popover\"\nimport { TimeInput } from \"@/components/time-input\"\nimport { Granularity } from \"@/types\"\nimport {\n  createCalendarDateFromDate,\n  getDefaultCalendarDateFromDate,\n  updateCalendarDateFromDate,\n} from \"@/utils/calendar\"\nimport { clx } from \"@/utils/clx\"\n\nimport { DatePickerButton } from \"./date-picker-button\"\nimport { DatePickerClearButton } from \"./date-picker-clear-button\"\nimport { DatePickerField } from \"./date-picker-field\"\n\ntype DatePickerValueProps = {\n  defaultValue?: Date | null\n  value?: Date | null\n  onChange?: (value: Date | null) => void\n  isDateUnavailable?: (date: Date) => boolean\n  minValue?: Date\n  maxValue?: Date\n  shouldCloseOnSelect?: boolean\n  granularity?: Granularity\n  size?: \"base\" | \"small\"\n  className?: string\n  modal?: boolean\n}\n\ninterface DatePickerProps\n  extends Omit<\n      BaseDatePickerProps<CalendarDateTime | CalendarDate>,\n      keyof DatePickerValueProps\n    >,\n    DatePickerValueProps {}\n\nconst datePickerStyles = (\n  isOpen: boolean,\n  isInvalid: boolean,\n  value?: DateValue | null\n) =>\n  cva({\n    base: clx(\n      \"bg-ui-bg-field shadow-borders-base txt-compact-small text-ui-fg-base transition-fg grid items-center gap-2 overflow-hidden rounded-md h-fit\",\n      \"focus-within:shadow-borders-interactive-with-active focus-visible:shadow-borders-interactive-with-active\",\n      \"aria-[invalid=true]:shadow-borders-error invalid:shadow-borders-error\",\n      {\n        \"shadow-borders-interactive-with-active\": isOpen,\n        \"shadow-borders-error\": isInvalid,\n        \"pr-2\": !value,\n      }\n    ),\n    variants: {\n      size: {\n        small: clx(\"grid-cols-[28px_1fr]\", {\n          \"grid-cols-[28px_1fr_28px]\": !!value,\n        }),\n        base: clx(\"grid-cols-[32px_1fr]\", {\n          \"grid-cols-[32px_1fr_32px]\": !!value,\n        }),\n      },\n    },\n  })\n\nconst HAS_TIME = new Set<Granularity>([\"hour\", \"minute\", \"second\"])\n\nconst DatePicker = React.forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      size = \"base\",\n      shouldCloseOnSelect = true,\n      className,\n      modal = false,\n      ...props\n    },\n    ref\n  ) => {\n    const [value, setValue] = React.useState<\n      CalendarDateTime | CalendarDate | null | undefined\n    >(\n      getDefaultCalendarDateFromDate(\n        props.value,\n        props.defaultValue,\n        props.granularity\n      )\n    )\n\n    const innerRef = React.useRef<HTMLDivElement>(null)\n    React.useImperativeHandle(ref, () => innerRef.current as HTMLDivElement)\n\n    const contentRef = React.useRef<HTMLDivElement>(null)\n\n    const _props = convertProps(props, setValue)\n\n    const state = useDatePickerState({\n      ..._props,\n      shouldCloseOnSelect,\n    })\n\n    const { groupProps, fieldProps, buttonProps, dialogProps, calendarProps } =\n      useDatePicker(_props, state, innerRef)\n\n    React.useEffect(() => {\n      setValue(\n        props.value\n          ? updateCalendarDateFromDate(value, props.value, props.granularity)\n          : null\n      )\n      state.setValue(\n        props.value\n          ? updateCalendarDateFromDate(value, props.value, props.granularity)\n          : null\n      )\n    }, [props.value])\n\n    function clear(e: React.MouseEvent<HTMLButtonElement>) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      props.onChange?.(null)\n      state.setValue(null)\n    }\n\n    useInteractOutside({\n      ref: contentRef,\n      onInteractOutside: () => {\n        state.setOpen(false)\n      },\n    })\n\n    const hasTime = props.granularity && HAS_TIME.has(props.granularity)\n    const Icon = hasTime ? Clock : CalendarMini\n\n    return (\n      <Popover modal={modal} open={state.isOpen} onOpenChange={state.setOpen}>\n        <Popover.Anchor asChild>\n          <div\n            ref={ref}\n            className={clx(\n              datePickerStyles(\n                state.isOpen,\n                state.isInvalid,\n                state.value\n              )({ size }),\n              className\n            )}\n            {...groupProps}\n          >\n            <DatePickerButton {...buttonProps} size={size}>\n              <Icon />\n            </DatePickerButton>\n            <DatePickerField {...fieldProps} size={size} />\n            {!!state.value && (\n              <DatePickerClearButton onClick={clear}>\n                <XMarkMini />\n              </DatePickerClearButton>\n            )}\n          </div>\n        </Popover.Anchor>\n        <Popover.Content\n          ref={contentRef}\n          {...dialogProps}\n          className=\"flex flex-col divide-y p-0\"\n        >\n          <div className=\"p-3\">\n            <InternalCalendar autoFocus {...calendarProps} />\n          </div>\n          {state.hasTime && (\n            <div className=\"p-3\">\n              <TimeInput\n                value={state.timeValue}\n                onChange={state.setTimeValue}\n                hourCycle={props.hourCycle}\n              />\n            </div>\n          )}\n        </Popover.Content>\n      </Popover>\n    )\n  }\n)\nDatePicker.displayName = \"DatePicker\"\n\nfunction convertProps(\n  props: DatePickerProps,\n  setValue: React.Dispatch<\n    React.SetStateAction<CalendarDateTime | CalendarDate | null | undefined>\n  >\n): BaseDatePickerProps<CalendarDateTime | CalendarDate> {\n  const {\n    minValue,\n    maxValue,\n    isDateUnavailable: _isDateUnavailable,\n    onChange: _onChange,\n    value: __value__,\n    defaultValue: __defaultValue__,\n    ...rest\n  } = props\n\n  const onChange = (value: CalendarDateTime | CalendarDateTime | null) => {\n    setValue(value)\n    _onChange?.(value ? value.toDate(getLocalTimeZone()) : null)\n  }\n\n  const isDateUnavailable = (date: DateValue) => {\n    const _date = date.toDate(getLocalTimeZone())\n\n    return _isDateUnavailable ? _isDateUnavailable(_date) : false\n  }\n\n  return {\n    ...rest,\n    onChange: onChange as BaseDatePickerProps<\n      CalendarDateTime | CalendarDate\n    >[\"onChange\"],\n    isDateUnavailable,\n    minValue: minValue\n      ? createCalendarDateFromDate(minValue, props.granularity)\n      : minValue,\n    maxValue: maxValue\n      ? createCalendarDateFromDate(maxValue, props.granularity)\n      : maxValue,\n  }\n}\n\nexport { DatePicker, type Granularity }\n"]}