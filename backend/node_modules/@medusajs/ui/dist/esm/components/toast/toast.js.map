{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../../../src/components/toast/toast.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,gBAAgB,EAChB,sBAAsB,EACtB,sBAAsB,EACtB,OAAO,EACP,YAAY,EACZ,KAAK,GACN,MAAM,iBAAiB,CAAA;AACxB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAA;AAE9B,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAA;AAErD,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AAYjC;;GAEG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC;AACpB;;GAEG;AACH,EAAE;AACF;;;;;;;GAOG;AACH,OAAO,GAAG,MAAM;AAChB;;;;;GAKG;AACH,KAAK;AACL;;;;;GAKG;AACH,IAAI,EAAE,KAAK;AACX;;GAEG;AACH,WAAW;AACX;;GAEG;AACH,MAAM;AACN;;;;;GAKG;AACH,WAAW,GAAG,IAAI,GACE,EAAE,EAAE;IACxB,IAAI,IAAI,GAAG,KAAK,CAAA;IAEhB,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,QAAQ,OAAO,EAAE,CAAC;YAChB,KAAK,SAAS;gBACZ,IAAI,GAAG,oBAAC,gBAAgB,IAAC,SAAS,EAAC,wBAAwB,GAAG,CAAA;gBAC9D,MAAK;YACP,KAAK,SAAS;gBACZ,IAAI,GAAG,oBAAC,sBAAsB,IAAC,SAAS,EAAC,yBAAyB,GAAG,CAAA;gBACrE,MAAK;YACP,KAAK,OAAO;gBACV,IAAI,GAAG,oBAAC,YAAY,IAAC,SAAS,EAAC,sBAAsB,GAAG,CAAA;gBACxD,MAAK;YACP,KAAK,SAAS;gBACZ,IAAI,GAAG,oBAAC,OAAO,IAAC,SAAS,EAAC,oCAAoC,GAAG,CAAA;gBACjE,MAAK;YACP,KAAK,MAAM;gBACT,IAAI,GAAG,oBAAC,sBAAsB,IAAC,SAAS,EAAC,iBAAiB,GAAG,CAAA;gBAC7D,MAAK;YACP;gBACE,MAAK;QACT,CAAC;IACH,CAAC;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,0HAA0H;QACvI,6BACE,SAAS,EAAE,GAAG,CAAC,kCAAkC,EAAE;gBACjD,sBAAsB,EAAE,CAAC,CAAC,IAAI;gBAC9B,aAAa,EAAE,CAAC,IAAI;gBACpB,aAAa,EAAE,CAAC,CAAC,WAAW;aAC7B,CAAC;YAED,CAAC,CAAC,IAAI,IAAI,CACT,8BAAM,SAAS,EAAC,yCAAyC,yBACtD,IAAI,CACA,CACR;YACD,6BAAK,SAAS,EAAC,uBAAuB;gBACpC,6BAAK,SAAS,EAAC,eAAe;oBAC5B,8BAAM,SAAS,EAAC,wCAAwC,IACrD,KAAK,CACD;oBACN,WAAW,IAAI,CACd,8BAAM,SAAS,EAAC,yCAAyC,IACtD,WAAW,CACP,CACR,CACG;gBACL,CAAC,CAAC,MAAM,IAAI,CACX,gCACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,GAAG,CACZ,8GAA8G,EAC9G,oCAAoC,EACpC,yBAAyB,EACzB,8BAA8B,EAC9B;wBACE,kBAAkB,EAAE,MAAM,CAAC,OAAO,KAAK,aAAa;qBACrD,CACF,EACD,OAAO,EAAE,MAAM,CAAC,OAAO,IAEtB,MAAM,CAAC,KAAK,CACN,CACV,CACG,CACF;QACL,CAAC,CAAC,WAAW,IAAI,CAChB,oBAAC,UAAU,IACT,IAAI,EAAC,SAAS,EACd,OAAO,EAAC,aAAa,EACrB,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YAEhC,oBAAC,KAAK,OAAG,CACE,CACd,CACG,CACP,CAAA;AACH,CAAC,CAAA","sourcesContent":["import {\n  CheckCircleSolid,\n  ExclamationCircleSolid,\n  InformationCircleSolid,\n  Spinner,\n  XCircleSolid,\n  XMark,\n} from \"@medusajs/icons\"\nimport * as React from \"react\"\nimport { toast } from \"sonner\"\n\nimport { IconButton } from \"@/components/icon-button\"\nimport type { ToastAction, ToastVariant } from \"@/types\"\nimport { clx } from \"@/utils/clx\"\n\ninterface ToastComponentProps {\n  id: string | number\n  variant?: ToastVariant\n  title: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastAction\n  icon?: React.ReactNode\n  dismissable?: boolean\n}\n\n/**\n * This component is based on the [Sonner](https://sonner.emilkowal.ski/toast) toast library.\n */\nexport const Toast = ({\n  /**\n   * Optional ID of the toast.\n   */\n  id,\n  /**\n   * @ignore\n   *\n   * @privateRemarks\n   * As the Toast component is created using\n   * the `toast` utility functions, the variant is inferred\n   * from the utility function.\n   */\n  variant = \"info\",\n  /**\n   * @ignore\n   *\n   * @privateRemarks\n   * The `toast` utility functions accept this as a parameter.\n   */\n  title,\n  /**\n   * @ignore\n   *\n   * @privateRemarks\n   * The `toast` utility functions accept this as a parameter.\n   */\n  icon: _icon,\n  /**\n   * The toast's text.\n   */\n  description,\n  /**\n   * The toast's action buttons.\n   */\n  action,\n  /**\n   * @ignore\n   *\n   * @privateRemarks\n   * The `toast` utility functions accept this as a parameter.\n   */\n  dismissable = true,\n}: ToastComponentProps) => {\n  let icon = _icon\n\n  if (!_icon) {\n    switch (variant) {\n      case \"success\":\n        icon = <CheckCircleSolid className=\"text-ui-tag-green-icon\" />\n        break\n      case \"warning\":\n        icon = <ExclamationCircleSolid className=\"text-ui-tag-orange-icon\" />\n        break\n      case \"error\":\n        icon = <XCircleSolid className=\"text-ui-tag-red-icon\" />\n        break\n      case \"loading\":\n        icon = <Spinner className=\"text-ui-tag-blue-icon animate-spin\" />\n        break\n      case \"info\":\n        icon = <InformationCircleSolid className=\"text-ui-fg-base\" />\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <div className=\"shadow-elevation-flyout bg-ui-bg-component flex w-fit min-w-[360px] max-w-[440px] gap-x-3 overflow-hidden rounded-lg p-3\">\n      <div\n        className={clx(\"grid flex-1 items-center gap-x-2\", {\n          \"grid-cols-[20px_1fr]\": !!icon,\n          \"grid-cols-1\": !icon,\n          \"items-start\": !!description,\n        })}\n      >\n        {!!icon && (\n          <span className=\"flex size-5 items-center justify-center\" aria-hidden>\n            {icon}\n          </span>\n        )}\n        <div className=\"flex flex-col gap-y-3\">\n          <div className=\"flex flex-col\">\n            <span className=\"txt-compact-small-plus text-ui-fg-base\">\n              {title}\n            </span>\n            {description && (\n              <span className=\"txt-small text-ui-fg-subtle text-pretty\">\n                {description}\n              </span>\n            )}\n          </div>\n          {!!action && (\n            <button\n              type=\"button\"\n              className={clx(\n                \"txt-compact-small-plus text-ui-fg-base bg-ui-bg-base flex w-fit items-center rounded-[4px] transition-colors\",\n                \"focus-visible:shadow-borders-focus\",\n                \"hover:text-ui-fg-subtle\",\n                \"disabled:text-ui-fg-disabled\",\n                {\n                  \"text-ui-fg-error\": action.variant === \"destructive\",\n                }\n              )}\n              onClick={action.onClick}\n            >\n              {action.label}\n            </button>\n          )}\n        </div>\n      </div>\n      {!!dismissable && (\n        <IconButton\n          size=\"2xsmall\"\n          variant=\"transparent\"\n          type=\"button\"\n          onClick={() => toast.dismiss(id)}\n        >\n          <XMark />\n        </IconButton>\n      )}\n    </div>\n  )\n}\n"]}