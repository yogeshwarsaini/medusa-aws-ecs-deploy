{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../../src/components/calendar/calendar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport {\n  CalendarDate,\n  createCalendar,\n  getLocalTimeZone\n} from \"@internationalized/date\"\nimport { TriangleLeftMini, TriangleRightMini } from \"@medusajs/icons\"\nimport * as React from \"react\"\nimport {\n  DateValue,\n  useCalendar,\n  useLocale,\n  type CalendarProps as BaseCalendarProps,\n} from \"react-aria\"\nimport { useCalendarState } from \"react-stately\"\n\nimport { createCalendarDate, getDefaultCalendarDate, updateCalendarDate } from \"@/utils/calendar\"\n\nimport { CalendarButton } from \"./calendar-button\"\nimport { CalendarGrid } from \"./calendar-grid\"\n\ninterface CalendarValueProps {\n  value?: Date | null\n  defaultValue?: Date | null\n  onChange?: (value: Date | null) => void\n  isDateUnavailable?: (date: Date) => boolean\n  minValue?: Date\n  maxValue?: Date\n}\n\ninterface CalendarProps\n  extends Omit<BaseCalendarProps<CalendarDate>, keyof CalendarValueProps>,\n    CalendarValueProps {}\n\n/**\n * Calendar component used to select a date.\n * Its props are based on [React Aria Calendar](https://react-spectrum.adobe.com/react-aria/Calendar.html#calendar-1).\n */\nconst Calendar = (props: CalendarProps) => {\n  const [value, setValue] = React.useState<CalendarDate  | null | undefined>(\n    () => getDefaultCalendarDate(props.value, props.defaultValue)\n  )\n\n  const { locale } = useLocale()\n  const _props = React.useMemo(() => convertProps(props, setValue), [props])\n\n  const state = useCalendarState({\n    ..._props,\n    value,\n    locale,\n    createCalendar,\n  })\n\n  React.useEffect(() => {\n    setValue(props.value ? updateCalendarDate(value, props.value) : null)\n  }, [props.value])\n\n  const { calendarProps, prevButtonProps, nextButtonProps, title } =\n    useCalendar({ value, ..._props }, state)\n\n  return (\n    <div {...calendarProps} className=\"flex flex-col gap-y-2\">\n      <div className=\"bg-ui-bg-field border-base grid grid-cols-[28px_1fr_28px] items-center gap-1 rounded-md border p-0.5\">\n        <CalendarButton {...prevButtonProps}>\n          <TriangleLeftMini />\n        </CalendarButton>\n        <div className=\"flex items-center justify-center\">\n          <h2 className=\"txt-compact-small-plus\">{title}</h2>\n        </div>\n        <CalendarButton {...nextButtonProps}>\n          <TriangleRightMini />\n        </CalendarButton>\n      </div>\n      <CalendarGrid state={state} />\n    </div>\n  )\n}\n\nfunction convertProps(\n  props: CalendarProps,\n  setValue: React.Dispatch<\n    React.SetStateAction<CalendarDate | null | undefined>\n  >\n): BaseCalendarProps<CalendarDate> {\n  const {\n    minValue,\n    maxValue,\n    isDateUnavailable: _isDateUnavailable,\n    onChange: _onChange,\n    value: __value__,\n    defaultValue: __defaultValue__,\n    ...rest\n  } = props\n\n  const onChange = (value: CalendarDate | null) => {\n    setValue(value)\n    _onChange?.(value ? value.toDate(getLocalTimeZone()) : null)\n  }\n\n  const isDateUnavailable = (date: DateValue) => {\n    const _date = date.toDate(getLocalTimeZone())\n\n    return _isDateUnavailable ? _isDateUnavailable(_date) : false\n  }\n\n  return {\n    ...rest,\n    onChange,\n    isDateUnavailable,\n    minValue: minValue ? createCalendarDate(minValue) : minValue,\n    maxValue: maxValue ? createCalendarDate(maxValue) : maxValue,\n  }\n}\n\nexport { Calendar }\n"]}