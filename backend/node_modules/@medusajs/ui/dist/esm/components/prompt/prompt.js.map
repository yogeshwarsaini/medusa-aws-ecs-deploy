{"version":3,"file":"prompt.js","sourceRoot":"","sources":["../../../../src/components/prompt/prompt.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { AlertDialog as RadixAlertDialog } from \"radix-ui\"\nimport * as React from \"react\"\n\nimport { Button } from \"@/components/button\"\nimport { Heading } from \"@/components/heading\"\nimport { clx } from \"@/utils/clx\"\n\ntype PromptVariant = \"danger\" | \"confirmation\"\n\nconst PromptContext = React.createContext<{ variant: PromptVariant }>({\n  variant: \"danger\",\n})\n\nconst usePromptContext = () => {\n  const context = React.useContext(PromptContext)\n  if (!context) {\n    throw new Error(\"usePromptContext must be used within a PromptProvider\")\n  }\n  return context\n}\n\ntype PromptProviderProps = React.PropsWithChildren<{\n  variant: PromptVariant\n}>\n\nconst PromptProvider = ({ variant, children }: PromptProviderProps) => {\n  return (\n    <PromptContext.Provider value={{ variant }}>\n      {children}\n    </PromptContext.Provider>\n  )\n}\n\n/**\n * This component is based on the [Radix UI Alert Dialog](https://www.radix-ui.com/primitives/docs/components/alert-dialog) primitives.\n */\nconst Root = ({\n  /**\n   * The variant of the prompt.\n   */\n  variant = \"danger\",\n  ...props\n}: React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Root> & {\n  variant?: PromptVariant\n}) => {\n  return (\n    <PromptProvider variant={variant}>\n      <RadixAlertDialog.Root {...props} />\n    </PromptProvider>\n  )\n}\nRoot.displayName = \"Prompt\"\n\nconst Trigger = RadixAlertDialog.Trigger\nTrigger.displayName = \"Prompt.Trigger\"\n\nconst Portal = (props: RadixAlertDialog.AlertDialogPortalProps) => {\n  return <RadixAlertDialog.AlertDialogPortal {...props} />\n}\nPortal.displayName = \"Prompt.Portal\"\n\nconst Overlay = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Overlay>,\n  React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Overlay>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadixAlertDialog.Overlay\n      ref={ref}\n      className={clx(\n        \"bg-ui-bg-overlay fixed inset-0\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nOverlay.displayName = \"Prompt.Overlay\"\n\nconst Title = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Title>,\n  Omit<React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Title>, \"asChild\">\n>(({ className, children, ...props }, ref) => {\n  return (\n    <RadixAlertDialog.Title ref={ref} className={clx(className)} {...props} asChild>\n      <Heading level=\"h2\" className=\"text-ui-fg-base\">\n        {children}\n      </Heading>\n    </RadixAlertDialog.Title>\n  )\n})\nTitle.displayName = \"Prompt.Title\"\n\nconst Content = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Content>\n>(({ className, ...props }, ref) => {\n  return (\n    <Portal>\n      <Overlay />\n      <RadixAlertDialog.Content\n        ref={ref}\n        className={clx(\n          \"bg-ui-bg-base shadow-elevation-flyout fixed left-[50%] top-[50%] flex w-full max-w-[400px] translate-x-[-50%] translate-y-[-50%] flex-col rounded-lg border focus-visible:outline-none\",\n          \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] duration-200\",\n          className\n        )}\n        {...props}\n      />\n    </Portal>\n  )\n})\nContent.displayName = \"Prompt.Content\"\n\nconst Description = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Description>,\n  React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Description>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadixAlertDialog.Description\n      ref={ref}\n      className={clx(\"text-ui-fg-subtle txt-compact-medium\", className)}\n      {...props}\n    />\n  )\n})\nDescription.displayName = \"Prompt.Description\"\n\nconst Action = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Action>,\n  Omit<React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Action>, \"asChild\">\n>(({ className, children, type, ...props }, ref) => {\n  const { variant } = usePromptContext()\n\n  return (\n    <RadixAlertDialog.Action ref={ref} className={className} {...props} asChild>\n      <Button\n        size=\"small\"\n        type={type}\n        variant={variant === \"danger\" ? \"danger\" : \"primary\"}\n      >\n        {children}\n      </Button>\n    </RadixAlertDialog.Action>\n  )\n})\nAction.displayName = \"Prompt.Action\"\n\nconst Cancel = React.forwardRef<\n  React.ElementRef<typeof RadixAlertDialog.Cancel>,\n  Omit<React.ComponentPropsWithoutRef<typeof RadixAlertDialog.Cancel>, \"asChild\">\n>(({ className, children, ...props }, ref) => {\n  return (\n    <RadixAlertDialog.Cancel ref={ref} className={clx(className)} {...props} asChild>\n      <Button size=\"small\" variant=\"secondary\">\n        {children}\n      </Button>\n    </RadixAlertDialog.Cancel>\n  )\n})\nCancel.displayName = \"Prompt.Cancel\"\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Header = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <div\n      className={clx(\"flex flex-col gap-y-1 px-6 pt-6\", className)}\n      {...props}\n    />\n  )\n}\nHeader.displayName = \"Prompt.Header\"\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Footer = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <div\n      className={clx(\"flex items-center justify-end gap-x-2 p-6\", className)}\n      {...props}\n    />\n  )\n}\nFooter.displayName = \"Prompt.Footer\"\n\nconst Prompt = Object.assign(Root, {\n  Trigger,\n  Content,\n  Title,\n  Description,\n  Action,\n  Cancel,\n  Header,\n  Footer,\n})\n\nexport { Prompt }\n"]}