{"version":3,"file":"avatar.js","sourceRoot":"","sources":["../../../../src/components/avatar/avatar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { cva, type VariantProps } from \"cva\"\nimport { Avatar as RadixAvatar } from \"radix-ui\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst avatarVariants = cva({\n  base: \"flex shrink-0 items-center justify-center overflow-hidden shadow-borders-base bg-ui-bg-base\",\n  variants: {\n    variant: {\n      squared: \"\",\n      rounded: \"rounded-full\",\n    },\n    size: {\n      \"2xsmall\": \"h-5 w-5\",\n      xsmall: \"h-6 w-6\",\n      small: \"h-7 w-7\",\n      base: \"h-8 w-8\",\n      large: \"h-10 w-10\",\n      xlarge: \"h-12 w-12\",\n    },\n  },\n  compoundVariants: [\n    {\n      variant: \"squared\",\n      size: \"2xsmall\",\n      className: \"rounded\",\n    },\n    {\n      variant: \"squared\",\n      size: \"xsmall\",\n      className: \"rounded-md\",\n    },\n    {\n      variant: \"squared\",\n      size: \"small\",\n      className: \"rounded-md\",\n    },\n    {\n      variant: \"squared\",\n      size: \"base\",\n      className: \"rounded-md\",\n    },\n    {\n      variant: \"squared\",\n      size: \"large\",\n      className: \"rounded-lg\",\n    },\n    {\n      variant: \"squared\",\n      size: \"xlarge\",\n      className: \"rounded-xl\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"rounded\",\n    size: \"base\",\n  },\n})\n\nconst innerVariants = cva({\n  base: \"aspect-square object-cover object-center\",\n  variants: {\n    variant: {\n      squared: \"\",\n      rounded: \"rounded-full\",\n    },\n    size: {\n      \"2xsmall\": \"txt-compact-xsmall-plus size-4\",\n      xsmall: \"txt-compact-xsmall-plus size-5\",\n      small: \"txt-compact-small-plus size-6\",\n      base: \"txt-compact-small-plus size-7\",\n      large: \"txt-compact-medium-plus size-9\",\n      xlarge: \"txt-compact-large-plus size-11\",\n    },\n  },\n  compoundVariants: [\n    {\n      variant: \"squared\",\n      size: \"2xsmall\",\n      className: \"rounded-sm\",\n    },\n    {\n      variant: \"squared\",\n      size: \"xsmall\",\n      className: \"rounded\",\n    },\n    {\n      variant: \"squared\",\n      size: \"small\",\n      className: \"rounded\",\n    },\n    {\n      variant: \"squared\",\n      size: \"base\",\n      className: \"rounded\",\n    },\n    {\n      variant: \"squared\",\n      size: \"large\",\n      className: \"rounded-md\",\n    },\n    {\n      variant: \"squared\",\n      size: \"xlarge\",\n      className: \"rounded-[10px]\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"rounded\",\n    size: \"base\",\n  },\n})\n\ninterface AvatarProps\n  extends Omit<\n      React.ComponentPropsWithoutRef<typeof RadixAvatar.Root>,\n      \"asChild\" | \"children\" | \"size\"\n    >,\n    VariantProps<typeof avatarVariants> {\n  src?: string\n  fallback: string\n}\n\n/**\n * This component is based on the [Radix UI Avatar](https://www.radix-ui.com/primitives/docs/components/avatar) primitive.\n */\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof RadixAvatar.Root>,\n  AvatarProps\n>(\n  (\n    {\n      /**\n       * The URL of the image used in the Avatar.\n       */\n      src,\n      /**\n       * Text to show in the avatar if the URL provided in `src` can't be opened.\n       */\n      fallback,\n      /**\n       * The style of the avatar.\n       */\n      variant = \"rounded\",\n      /**\n       * The size of the avatar's border radius.\n       */\n      size = \"base\",\n      className,\n      ...props\n    }: AvatarProps,\n    ref\n  ) => {\n    return (\n      <RadixAvatar.Root\n        ref={ref}\n        {...props}\n        className={clx(         \n          avatarVariants({ variant, size }),\n          className\n        )}\n      >\n        {src && (\n          <RadixAvatar.Image\n            src={src}\n            className={innerVariants({ variant, size })}\n          />\n        )}\n        <RadixAvatar.Fallback\n          className={clx(\n            innerVariants({ variant, size }),\n            \"bg-ui-bg-component-hover text-ui-fg-subtle pointer-events-none flex select-none items-center justify-center\"\n          )}\n        >\n          {fallback}\n        </RadixAvatar.Fallback>\n      </RadixAvatar.Root>\n    )\n  }\n)\nAvatar.displayName = \"Avatar\"\n\nexport { Avatar }\n"]}