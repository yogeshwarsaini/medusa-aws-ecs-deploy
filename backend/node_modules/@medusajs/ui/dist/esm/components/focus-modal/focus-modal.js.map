{"version":3,"file":"focus-modal.js","sourceRoot":"","sources":["../../../../src/components/focus-modal/focus-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { XMark } from \"@medusajs/icons\"\nimport { Dialog as RadixDialog } from \"radix-ui\"\nimport * as React from \"react\"\n\nimport { IconButton } from \"@/components/icon-button\"\nimport { Kbd } from \"@/components/kbd\"\nimport { clx } from \"@/utils/clx\"\n\n/**\n * @prop defaultOpen - Whether the modal is opened by default.\n * @prop open - Whether the modal is opened.\n * @prop onOpenChange - A function to handle when the modal is opened or closed.\n */\ninterface FocusModalRootProps\n  extends React.ComponentPropsWithoutRef<typeof RadixDialog.Root> {}\n\n/**\n * This component is based on the [Radix UI Dialog](https://www.radix-ui.com/primitives/docs/components/dialog) primitives.\n */\nconst FocusModalRoot = (props: FocusModalRootProps) => {\n  return <RadixDialog.Root {...props} />\n}\nFocusModalRoot.displayName = \"FocusModal\"\n\ninterface FocusModalTriggerProps extends React.ComponentPropsWithoutRef<typeof RadixDialog.Trigger> {}\n\n/**\n * This component is used to create the trigger button that opens the modal.\n * It accepts props from the [Radix UI Dialog Trigger](https://www.radix-ui.com/primitives/docs/components/dialog#trigger) component.\n */\nconst FocusModalTrigger = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Trigger>,\n  FocusModalTriggerProps\n>((props: FocusModalTriggerProps, ref) => {\n  return <RadixDialog.Trigger ref={ref} {...props} />\n})\nFocusModalTrigger.displayName = \"FocusModal.Trigger\"\n\n/**\n * This component is used to create the close button for the modal.\n * It accepts props from the [Radix UI Dialog Close](https://www.radix-ui.com/primitives/docs/components/dialog#close) component.\n */\nconst FocusModalClose = RadixDialog.Close\nFocusModalClose.displayName = \"FocusModal.Close\"\n\ninterface FocusModalPortalProps extends RadixDialog.DialogPortalProps {}\n\n/**\n * The `FocusModal.Content` component uses this component to wrap the modal content.\n * It accepts props from the [Radix UI Dialog Portal](https://www.radix-ui.com/primitives/docs/components/dialog#portal) component.\n */\nconst FocusModalPortal = (props: FocusModalPortalProps) => {\n  return (\n    <RadixDialog.DialogPortal {...props} />\n  )\n}\nFocusModalPortal.displayName = \"FocusModal.Portal\"\n\n/**\n * This component is used to create the overlay for the modal.\n * It accepts props from the [Radix UI Dialog Overlay](https://www.radix-ui.com/primitives/docs/components/dialog#overlay) component.\n */\nconst FocusModalOverlay = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Overlay>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Overlay>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadixDialog.Overlay\n      ref={ref}\n      className={clx(\n        \"bg-ui-bg-overlay fixed inset-0\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nFocusModalOverlay.displayName = \"FocusModal.Overlay\"\n\n/**\n * This component wraps the content of the modal.\n * It accepts props from the [Radix UI Dialog Content](https://www.radix-ui.com/primitives/docs/components/dialog#content) component.\n */\nconst FocusModalContent = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Content> & {\n    overlayProps?: React.ComponentPropsWithoutRef<typeof FocusModalOverlay>\n    portalProps?: React.ComponentPropsWithoutRef<typeof FocusModalPortal>\n  }\n>(({ className, overlayProps, portalProps, ...props }, ref) => {\n  return (\n    <FocusModalPortal {...portalProps}>\n      <FocusModalOverlay {...overlayProps} />\n      <RadixDialog.Content\n        ref={ref}\n        className={clx(\n          \"bg-ui-bg-base shadow-elevation-modal fixed inset-2 flex flex-col overflow-hidden rounded-lg border outline-none\",\n          \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=open]:slide-in-from-bottom-0 data-[state=closed]:slide-in-from-bottom-2  duration-200\",\n          className\n        )}\n        {...props}\n      />\n    </FocusModalPortal>\n  )\n})\nFocusModalContent.displayName = \"FocusModal.Content\"\n\n/**\n * This component is used to wrap the header content of the modal.\n * This component is based on the `div` element and supports all of its props\n */\nconst FocusModalHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\n        \"border-ui-border-base flex items-center justify-between gap-x-4 border-b px-4 py-2\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"flex items-center gap-x-2\">\n        <RadixDialog.Close asChild>\n          <IconButton size=\"small\" type=\"button\" variant=\"transparent\">\n            <XMark />\n          </IconButton>\n        </RadixDialog.Close>\n        <Kbd>esc</Kbd>\n      </div>\n      {children}\n    </div>\n  )\n})\nFocusModalHeader.displayName = \"FocusModal.Header\"\n\n/**\n * This component is used to wrap the footer content of the modal.\n * This component is based on the `div` element and supports all of its props\n */\nconst FocusModalFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ children, className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={clx(\n        \"border-ui-border-base flex items-center justify-end gap-x-2 border-t p-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n})\nFocusModalFooter.displayName = \"FocusModal.Footer\"\n\ninterface FocusModalTitleProps extends React.ComponentPropsWithoutRef<typeof RadixDialog.Title> {}\n\n/**\n * This component adds an accessible title to the modal.\n * It accepts props from the [Radix UI Dialog Title](https://www.radix-ui.com/primitives/docs/components/dialog#title) component.\n */\nconst FocusModalTitle = React.forwardRef<\n  HTMLHeadingElement,\n  FocusModalTitleProps\n>(({ className, ...props }: FocusModalTitleProps, ref) => {\n  return (\n    <RadixDialog.Title ref={ref} {...props} />\n  )\n})\nFocusModalTitle.displayName = \"FocusModal.Title\"\n\n/**\n * This component adds accessible description to the modal.\n * It accepts props from the [Radix UI Dialog Description](https://www.radix-ui.com/primitives/docs/components/dialog#description) component.\n */\nconst FocusModalDescription = RadixDialog.Description\nFocusModalDescription.displayName = \"FocusModal.Description\"\n\n/**\n * This component is used to wrap the body content of the modal.\n * This component is based on the `div` element and supports all of its props\n */\nconst FocusModalBody = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => {\n  return <div ref={ref} className={clx(\"flex-1\", className)} {...props} />\n})\nFocusModalBody.displayName = \"FocusModal.Body\"\n\nconst FocusModal = Object.assign(FocusModalRoot, {\n  Trigger: FocusModalTrigger,\n  Title: FocusModalTitle,\n  Description: FocusModalDescription,\n  Content: FocusModalContent,\n  Header: FocusModalHeader,\n  Body: FocusModalBody,\n  Close: FocusModalClose,\n  Footer: FocusModalFooter,\n})\n\nexport { FocusModal }\n"]}