{"version":3,"file":"code-block.js","sourceRoot":"","sources":["../../../../src/components/code-block/code-block.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\nimport { Highlight, Prism, themes } from \"prism-react-renderer\"\nimport * as React from \"react\"\n;(typeof global !== \"undefined\" ? global : window).Prism = Prism\n\n// @ts-ignore\nimport(\"prismjs/components/prism-json\")\n\nimport { Copy } from \"@/components/copy\"\nimport { clx } from \"@/utils/clx\"\n\nexport type CodeSnippet = {\n  /**\n   * The label of the code snippet's tab.\n   */\n  label: string\n  /**\n   * The language of the code snippet. For example, `tsx`.\n   */\n  language: string\n  /**\n   * The code snippet.\n   */\n  code: string\n  /**\n   * Whether to hide the line numbers shown as the side of the code snippet.\n   */\n  hideLineNumbers?: boolean\n  /**\n   * Whether to hide the copy button.\n   */\n  hideCopy?: boolean\n}\n\ntype CodeBlockState = {\n  snippets: CodeSnippet[]\n  active: CodeSnippet\n  setActive: (active: CodeSnippet) => void\n} | null\n\nconst CodeBlockContext = React.createContext<CodeBlockState>(null)\n\nconst useCodeBlockContext = () => {\n  const context = React.useContext(CodeBlockContext)\n\n  if (context === null)\n    throw new Error(\n      \"useCodeBlockContext can only be used within a CodeBlockContext\"\n    )\n\n  return context\n}\n\ntype RootProps = {\n  snippets: CodeSnippet[]\n}\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Root = ({\n  /**\n   * The code snippets.\n   */\n  snippets,\n  className,\n  children,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & RootProps) => {\n  const [active, setActive] = React.useState(snippets[0])\n\n  return (\n    <CodeBlockContext.Provider value={{ snippets, active, setActive }}>\n      <div\n        className={clx(\n          \"bg-ui-contrast-bg-base shadow-elevation-code-block flex flex-col overflow-hidden rounded-xl\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    </CodeBlockContext.Provider>\n  )\n}\nRoot.displayName = \"CodeBlock\"\n\ntype HeaderProps = {\n  hideLabels?: boolean\n}\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst HeaderComponent = ({\n  children,\n  className,\n  /**\n   * Whether to hide the code snippets' labels.\n   */\n  hideLabels = false,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & HeaderProps) => {\n  const { snippets, active, setActive } = useCodeBlockContext()\n\n  const tabRefs = React.useRef<Array<HTMLSpanElement | null>>([])\n  const tabIndicatorRef = React.useRef<HTMLDivElement | null>(null)\n\n  React.useEffect(() => {\n    const activeTabRef = tabRefs.current.find(\n      (ref) => ref?.dataset.label === active.label\n    )\n\n    if (activeTabRef && tabIndicatorRef.current) {\n      const activeTabIndex = tabRefs.current.indexOf(activeTabRef)\n\n      const prevTabRef =\n        activeTabIndex > 0 ? tabRefs.current[activeTabIndex - 1] : null\n\n      tabIndicatorRef.current.style.width = `${activeTabRef.offsetWidth}px`\n      tabIndicatorRef.current.style.left = prevTabRef\n        ? `${\n            tabRefs.current\n              .slice(0, activeTabIndex)\n              .reduce((total, tab) => total + (tab?.offsetWidth || 0) + 12, 0) +\n            15\n          }px`\n        : \"15px\"\n    }\n  }, [active])\n\n  return (\n    <div>\n      <div\n        className={clx(\"flex items-start px-4 pt-2.5\", className)}\n        {...props}\n      >\n        {!hideLabels &&\n          snippets.map((snippet, idx) => (\n            <div\n              className={clx(\n                \"text-ui-contrast-fg-secondary txt-compact-small-plus transition-fg relative cursor-pointer pb-[9px] pr-3\",\n                {\n                  \"text-ui-contrast-fg-primary cursor-default\":\n                    active.label === snippet.label,\n                }\n              )}\n              key={snippet.label}\n              onClick={() => setActive(snippet)}\n            >\n              <span\n                ref={(ref) => {\n                  tabRefs.current[idx] = ref\n                  return undefined\n                }}\n                data-label={snippet.label}\n              >\n                {snippet.label}\n              </span>\n            </div>\n          ))}\n        {children}\n      </div>\n      <div className=\"w-full px-0.5\">\n        <div className=\"bg-ui-contrast-border-top relative h-px w-full\">\n          <div\n            ref={tabIndicatorRef}\n            className={clx(\n              \"absolute bottom-0 transition-all motion-reduce:transition-none\",\n              \"duration-150 ease-linear\"\n            )}\n          >\n            <div className=\"bg-ui-contrast-fg-primary h-px rounded-full\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nHeaderComponent.displayName = \"CodeBlock.Header\"\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Meta = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <div\n      className={clx(\n        \"txt-compact-small text-ui-contrast-fg-secondary ml-auto\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMeta.displayName = \"CodeBlock.Header.Meta\"\n\nconst Header = Object.assign(HeaderComponent, { Meta })\n\n/**\n * This component is based on the `div` element and supports all of its props\n */\nconst Body = ({\n  className,\n  children,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  const { active } = useCodeBlockContext()\n\n  const showToolbar = children || !active.hideCopy\n\n  return (\n    <div>\n      {showToolbar && (\n        <div className=\"border-ui-contrast-border-bot flex min-h-10 items-center gap-x-3 border-t px-4 py-2\">\n          <div className=\"code-body text-ui-contrast-fg-secondary flex-1\">\n            {children}\n          </div>\n          {!active.hideCopy && (\n            <Copy\n              content={active.code}\n              className=\"text-ui-contrast-fg-secondary\"\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex h-full flex-col overflow-hidden px-[5px] pb-[5px]\">\n        <div\n          className={clx(\n            \"bg-ui-contrast-bg-subtle border-ui-contrast-border-bot relative h-full overflow-y-auto rounded-lg border p-4\",\n            className\n          )}\n          {...props}\n        >\n          <div className=\"max-w-[90%]\">\n            <Highlight\n              theme={{\n                ...themes.palenight,\n                plain: {\n                  color: \"rgba(249, 250, 251, 1)\",\n                  backgroundColor: \"var(--contrast-fg-primary)\",\n                },\n                styles: [\n                  ...themes.palenight.styles,\n                  {\n                    types: [\"keyword\"],\n                    style: {\n                      fontStyle: \"normal\",\n                      color: \"rgb(187,160,255)\",\n                    },\n                  },\n                  {\n                    types: [\"punctuation\", \"operator\"],\n                    style: {\n                      fontStyle: \"normal\",\n                      color: \"rgb(255,255,255)\",\n                    },\n                  },\n                  {\n                    types: [\"constant\", \"boolean\"],\n                    style: {\n                      fontStyle: \"normal\",\n                      color: \"rgb(187,77,96)\",\n                    },\n                  },\n                  {\n                    types: [\"function\"],\n                    style: {\n                      fontStyle: \"normal\",\n                      color: \"rgb(27,198,242)\",\n                    },\n                  },\n                  {\n                    types: [\"number\"],\n                    style: {\n                      color: \"rgb(247,208,25)\",\n                    },\n                  },\n                  {\n                    types: [\"property\"],\n                    style: {\n                      color: \"rgb(247,208,25)\",\n                    },\n                  },\n                  {\n                    types: [\"maybe-class-name\"],\n                    style: {\n                      color: \"rgb(255,203,107)\",\n                    },\n                  },\n                  {\n                    types: [\"string\"],\n                    style: {\n                      color: \"rgb(73,209,110)\",\n                    },\n                  },\n                  {\n                    types: [\"comment\"],\n                    style: {\n                      color: \"var(--contrast-fg-secondary)\",\n                      fontStyle: \"normal\",\n                    },\n                  },\n                ],\n              }}\n              code={active.code}\n              language={active.language}\n            >\n              {({ style, tokens, getLineProps, getTokenProps }) => (\n                <pre\n                  className={clx(\n                    \"code-body whitespace-pre-wrap bg-transparent\",\n                    {\n                      \"grid grid-cols-[auto,1fr] gap-x-4\":\n                        !active.hideLineNumbers,\n                    }\n                  )}\n                  style={{\n                    ...style,\n                    background: \"transparent\",\n                  }}\n                >\n                  {!active.hideLineNumbers && (\n                    <div\n                      role=\"presentation\"\n                      className=\"flex flex-col text-right\"\n                    >\n                      {tokens.map((_, i) => (\n                        <span\n                          key={i}\n                          className=\"text-ui-contrast-fg-secondary tabular-nums\"\n                        >\n                          {i + 1}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                  <div>\n                    {tokens.map((line, i) => (\n                      <div key={i} {...getLineProps({ line })}>\n                        {line.map((token, key) => (\n                          <span key={key} {...getTokenProps({ token })} />\n                        ))}\n                      </div>\n                    ))}\n                  </div>\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nBody.displayName = \"CodeBlock.Body\"\n\nconst CodeBlock = Object.assign(Root, { Body, Header, Meta })\n\nexport { CodeBlock }\n"]}