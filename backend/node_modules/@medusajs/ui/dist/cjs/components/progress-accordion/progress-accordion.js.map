{"version":3,"file":"progress-accordion.js","sourceRoot":"","sources":["../../../../src/components/progress-accordion/progress-accordion.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,2CAKwB;AACxB,uCAAsD;AACtD,qDAA8B;AAG9B,qCAAiC;AACjC,gDAA2C;AAE3C;;GAEG;AACH,MAAM,IAAI,GAAG,CAAC,KAAiE,EAAE,EAAE;IACjF,OAAO,oBAAC,oBAAc,CAAC,IAAI,OAAK,KAAK,GAAI,CAAA;AAC3C,CAAC,CAAA;AACD,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAA;AAEtC,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE;IACjC,OAAO,CACL,oBAAC,oBAAc,CAAC,IAAI,IAClB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACZ,wDAAwD,EACxD,SAAS,CACV,KACG,KAAK,GACT,CACH,CAAA;AACH,CAAC,CAAC,CAAA;AACF,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAA;AAW3C,MAAM,iBAAiB,GAAG,CAAC;AACzB;;GAEG;AACH,MAAM,EACN,GAAG,KAAK,EACa,EAAE,EAAE;IACzB,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;QAC9B,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,aAAa;gBAChB,OAAO,wBAAgB,CAAA;YACzB,KAAK,aAAa;gBAChB,OAAO,uBAAe,CAAA;YACxB,KAAK,WAAW;gBACd,OAAO,wBAAgB,CAAA;YACzB;gBACE,OAAO,wBAAgB,CAAA;QAC3B,CAAC;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;IAEZ,OAAO,CACL,8BACE,SAAS,EAAC,4GAA4G,KAClH,KAAK;QAET,oBAAC,IAAI,OAAG,CACH,CACR,CAAA;AACH,CAAC,CAAA;AACD,iBAAiB,CAAC,WAAW,GAAG,qCAAqC,CAAA;AAErE,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAI7B,CACE,EACE,SAAS;AACT;;GAEG;AACH,MAAM,GAAG,aAAa,EACtB,QAAQ,EACR,GAAG,KAAK,EACI,EACd,GAAG,EACH,EAAE;IACF,OAAO,CACL,oBAAC,oBAAc,CAAC,MAAM,IACpB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACZ,0EAA0E,EAC1E,SAAS,CACV,KACG,KAAK;QAET,oBAAC,iBAAiB,IAAC,MAAM,EAAE,MAAM,GAAI;QACpC,QAAQ;QACT,oBAAC,oBAAc,CAAC,OAAO,IAAC,OAAO,QAAC,SAAS,EAAC,SAAS;YACjD,oBAAC,wBAAU,IAAC,OAAO,EAAC,aAAa;gBAC/B,oBAAC,YAAI,IAAC,SAAS,EAAC,kEAAkE,GAAG,CAC1E,CACU,CACH,CACzB,CAAA;AACH,CAAC,CACF,CAAA;AACD,MAAM,CAAC,WAAW,GAAG,0BAA0B,CAAA;AAE/C,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE;IACjC,OAAO,CACL,oBAAC,oBAAc,CAAC,OAAO,IACrB,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAA,SAAG,EACZ,iBAAiB,EACjB,kGAAkG,EAClG,SAAS,CACV,KACG,KAAK,GACT,CACH,CAAA;AACH,CAAC,CAAC,CAAA;AACF,OAAO,CAAC,WAAW,GAAG,2BAA2B,CAAA;AAEjD,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;IAC5C,IAAI;IACJ,MAAM;IACN,OAAO;CACR,CAAC,CAAA;AAEO,8CAAiB","sourcesContent":["\"use client\"\n\nimport {\n  CheckCircleSolid,\n  CircleDottedLine,\n  CircleHalfSolid,\n  Plus,\n} from \"@medusajs/icons\"\nimport { Accordion as RadixAccordion } from \"radix-ui\"\nimport * as React from \"react\"\n\nimport { ProgressStatus } from \"@/types\"\nimport { clx } from \"@/utils/clx\"\nimport { IconButton } from \"../icon-button\"\n\n/**\n * This component is based on the [Radix UI Accordion](https://radix-ui.com/primitives/docs/components/accordion) primitves.\n */\nconst Root = (props: React.ComponentPropsWithoutRef<typeof RadixAccordion.Root>) => {\n  return <RadixAccordion.Root {...props} />\n}\nRoot.displayName = \"ProgressAccordion\"\n\nconst Item = React.forwardRef<\n  React.ElementRef<typeof RadixAccordion.Item>,\n  React.ComponentPropsWithoutRef<typeof RadixAccordion.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadixAccordion.Item\n      ref={ref}\n      className={clx(\n        \"border-ui-border-base border-b last-of-type:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nItem.displayName = \"ProgressAccordion.Item\"\n\ninterface HeaderProps\n  extends React.ComponentPropsWithoutRef<typeof RadixAccordion.Header> {\n  status?: ProgressStatus\n}\n\ninterface StatusIndicatorProps extends React.ComponentPropsWithoutRef<\"span\"> {\n  status: ProgressStatus\n}\n\nconst ProgressIndicator = ({\n  /**\n   * The current status.\n   */\n  status,\n  ...props\n}: StatusIndicatorProps) => {\n  const Icon = React.useMemo(() => {\n    switch (status) {\n      case \"not-started\":\n        return CircleDottedLine\n      case \"in-progress\":\n        return CircleHalfSolid\n      case \"completed\":\n        return CheckCircleSolid\n      default:\n        return CircleDottedLine\n    }\n  }, [status])\n\n  return (\n    <span\n      className=\"text-ui-fg-muted group-data-[state=open]:text-ui-fg-interactive flex h-12 w-12 items-center justify-center\"\n      {...props}\n    >\n      <Icon />\n    </span>\n  )\n}\nProgressIndicator.displayName = \"ProgressAccordion.ProgressIndicator\"\n\nconst Header = React.forwardRef<\n  React.ElementRef<typeof RadixAccordion.Header>,\n  HeaderProps\n>(\n  (\n    {\n      className,\n      /**\n       * The current status.\n       */\n      status = \"not-started\",\n      children,\n      ...props\n    }: HeaderProps,\n    ref\n  ) => {\n    return (\n      <RadixAccordion.Header\n        ref={ref}\n        className={clx(\n          \"h3-core text-ui-fg-base group flex w-full flex-1 items-center gap-4 px-6\",\n          className\n        )}\n        {...props}\n      >\n        <ProgressIndicator status={status} />\n        {children}\n        <RadixAccordion.Trigger asChild className=\"ml-auto\">\n          <IconButton variant=\"transparent\">\n            <Plus className=\"transform transition-transform group-data-[state=open]:rotate-45\" />\n          </IconButton>\n        </RadixAccordion.Trigger>\n      </RadixAccordion.Header>\n    )\n  }\n)\nHeader.displayName = \"ProgressAccordion.Header\"\n\nconst Content = React.forwardRef<\n  React.ElementRef<typeof RadixAccordion.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixAccordion.Content>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadixAccordion.Content\n      ref={ref}\n      className={clx(\n        \"overflow-hidden\",\n        \"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down pl-[88px] pr-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nContent.displayName = \"ProgressAccordion.Content\"\n\nconst ProgressAccordion = Object.assign(Root, {\n  Item,\n  Header,\n  Content,\n})\n\nexport { ProgressAccordion }\n"]}