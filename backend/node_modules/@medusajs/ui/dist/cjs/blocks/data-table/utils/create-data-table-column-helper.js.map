{"version":3,"file":"create-data-table-column-helper.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/utils/create-data-table-column-helper.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAA;;;;AAEZ,uDAAwF;AACxF,qDAA8B;AAC9B,iFAA0E;AAC1E,iFAG6C;AAS7C,MAAM,2BAA2B,GAAG,GAEF,EAAE;IAClC,MAAM,EAAE,QAAQ,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAC3C,IAAA,gCAA0B,GAAS,CAAA;IAErC,OAAO;QACL,QAAQ,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;YAC7B,MAAM,EACJ,SAAS,EACT,YAAY,EACZ,aAAa,EACb,IAAI,EACJ,aAAa,EACb,GAAG,IAAI,EACR,GAAG,MAA0C,CAAA;YAE9C,MAAM,YAAY,GAAmC;gBACnD,eAAe,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE;gBAC3D,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;aAChB,CAAA;YAED,OAAO,gBAAgB,CAAC,QAAQ,EAAE;gBAChC,GAAG,IAAI;gBACP,aAAa,EAAE,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,KAAK;gBACrC,IAAI,EAAE,YAAY;aACnB,CAAC,CAAA;QACJ,CAAC;QACD,OAAO;QACP,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,KAAK,EAAmC,EAAE,EAAE,CACjE,OAAO,CAAC;YACN,EAAE,EAAE,QAAQ;YACZ,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,oBAAC,4CAAmB,IAAC,GAAG,EAAE,GAAG,GAAI;YAChD,IAAI,EAAE;gBACJ,UAAU,EAAE,OAAO;gBACnB,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;aACtB;YACD,GAAG,KAAK;SACT,CAAC;QACJ,MAAM,EAAE,CAAC,KAAuC,EAAE,EAAE,CAClD,OAAO,CAAC;YACN,EAAE,EAAE,QAAQ;YACZ,MAAM,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM;gBACnB,CAAC,CAAC,KAAK,CAAC,MAAM;gBACd,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,oBAAC,8CAAqB,IAAC,GAAG,EAAE,GAAG,GAAI;YAChD,IAAI,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI;gBACf,CAAC,CAAC,KAAK,CAAC,IAAI;gBACZ,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,oBAAC,4CAAmB,IAAC,GAAG,EAAE,GAAG,GAAI;SAC/C,CAAC;KACL,CAAA;AACH,CAAC,CAAA;AAQQ,kEAA2B;AANpC,MAAM,MAAM,GAAG,IAAA,gCAA0B,GAAE,CAAA;AAE3C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;IACtB,IAAI,EAAE,EAAE;CACT,CAAC,CAAA","sourcesContent":["\"use client\"\n\nimport { createColumnHelper as createColumnHelperTanstack } from \"@tanstack/react-table\"\nimport * as React from \"react\"\nimport { DataTableActionCell } from \"../components/data-table-action-cell\"\nimport {\n  DataTableSelectCell,\n  DataTableSelectHeader,\n} from \"../components/data-table-select-cell\"\nimport {\n  DataTableActionColumnDef,\n  DataTableColumnHelper,\n  DataTableSelectColumnDef,\n  DataTableSortableColumnDef,\n  DataTableSortableColumnDefMeta,\n} from \"../types\"\n\nconst createDataTableColumnHelper = <\n  TData,\n>(): DataTableColumnHelper<TData> => {\n  const { accessor: accessorTanstack, display } =\n    createColumnHelperTanstack<TData>()\n\n  return {\n    accessor: (accessor, column) => {\n      const {\n        sortLabel,\n        sortAscLabel,\n        sortDescLabel,\n        meta,\n        enableSorting,\n        ...rest\n      } = column as any & DataTableSortableColumnDef\n\n      const extendedMeta: DataTableSortableColumnDefMeta = {\n        ___sortMetaData: { sortLabel, sortAscLabel, sortDescLabel },\n        ...(meta || {}),\n      }\n\n      return accessorTanstack(accessor, {\n        ...rest,\n        enableSorting: enableSorting ?? false,\n        meta: extendedMeta,\n      })\n    },\n    display,\n    action: ({ actions, ...props }: DataTableActionColumnDef<TData>) =>\n      display({\n        id: \"action\",\n        cell: (ctx) => <DataTableActionCell ctx={ctx} />,\n        meta: {\n          ___actions: actions,\n          ...(props.meta || {}),\n        },\n        ...props,\n      }),\n    select: (props?: DataTableSelectColumnDef<TData>) =>\n      display({\n        id: \"select\",\n        header: props?.header\n          ? props.header\n          : (ctx) => <DataTableSelectHeader ctx={ctx} />,\n        cell: props?.cell\n          ? props.cell\n          : (ctx) => <DataTableSelectCell ctx={ctx} />,\n      }),\n  }\n}\n\nconst helper = createColumnHelperTanstack()\n\nhelper.accessor(\"name\", {\n  meta: {},\n})\n\nexport { createDataTableColumnHelper }\n"]}