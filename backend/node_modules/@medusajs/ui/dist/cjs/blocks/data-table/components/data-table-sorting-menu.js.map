{"version":3,"file":"data-table-sorting-menu.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/components/data-table-sorting-menu.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport { useDataTableContext } from \"@/blocks/data-table/context/use-data-table-context\"\nimport {\n  DataTableColumn,\n  DataTableSortableColumnDefMeta,\n} from \"@/blocks/data-table/types\"\nimport { DropdownMenu } from \"@/components/dropdown-menu\"\nimport { IconButton } from \"@/components/icon-button\"\nimport { Skeleton } from \"@/components/skeleton\"\nimport { Tooltip } from \"@/components/tooltip\"\nimport { ArrowDownMini, ArrowUpMini, DescendingSorting } from \"@medusajs/icons\"\nimport * as React from \"react\"\n\ninterface DataTableSortingMenuProps {\n  /**\n   * The tooltip to show when hovering over the sorting menu.\n   */\n  tooltip?: string\n}\n\n/**\n * This component adds a sorting menu to the data table, allowing users\n * to sort the table's data.\n */\nconst DataTableSortingMenu = (props: DataTableSortingMenuProps) => {\n  const { instance } = useDataTableContext()\n\n  const sortableColumns = instance\n    .getAllColumns()\n    .filter((column) => column.getCanSort())\n\n  const sorting = instance.getSorting()\n\n  const selectedColumn = React.useMemo(() => {\n    return sortableColumns.find((column) => column.id === sorting?.id)\n  }, [sortableColumns, sorting])\n\n  const setKey = React.useCallback(\n    (key: string) => {\n      instance.setSorting((prev) => ({ id: key, desc: prev?.desc ?? false }))\n    },\n    [instance]\n  )\n\n  const setDesc = React.useCallback(\n    (desc: string) => {\n      instance.setSorting((prev) => ({\n        id: prev?.id ?? \"\",\n        desc: desc === \"true\",\n      }))\n    },\n    [instance]\n  )\n\n  if (!instance.enableSorting) {\n    throw new Error(\n      \"DataTable.SortingMenu was rendered but sorting is not enabled. Make sure to pass sorting to 'useDataTable'\"\n    )\n  }\n\n  if (!sortableColumns.length) {\n    throw new Error(\n      \"DataTable.SortingMenu was rendered but there are no sortable columns. Make sure to set `enableSorting` to true on at least one column.\"\n    )\n  }\n\n  if (instance.showSkeleton) {\n    return <DataTableSortingMenuSkeleton />\n  }\n\n  const Wrapper = props.tooltip ? Tooltip : React.Fragment\n  const wrapperProps = props.tooltip ? { content: props.tooltip } : ({} as any)\n\n  return (\n    <DropdownMenu>\n      <Wrapper {...wrapperProps}>\n        <DropdownMenu.Trigger asChild>\n          <IconButton size=\"small\">\n            <DescendingSorting />\n          </IconButton>\n        </DropdownMenu.Trigger>\n      </Wrapper>\n      <DropdownMenu.Content side=\"bottom\">\n        <DropdownMenu.RadioGroup value={sorting?.id} onValueChange={setKey}>\n          {sortableColumns.map((column) => {\n            return (\n              <DropdownMenu.RadioItem\n                onSelect={(e) => e.preventDefault()}\n                value={column.id}\n                key={column.id}\n              >\n                {getSortLabel(column)}\n              </DropdownMenu.RadioItem>\n            )\n          })}\n        </DropdownMenu.RadioGroup>\n        {sorting && (\n          <React.Fragment>\n            <DropdownMenu.Separator />\n            <DropdownMenu.RadioGroup\n              value={sorting?.desc ? \"true\" : \"false\"}\n              onValueChange={setDesc}\n            >\n              <DropdownMenu.RadioItem\n                onSelect={(e) => e.preventDefault()}\n                value=\"false\"\n                className=\"flex items-center gap-2\"\n              >\n                <ArrowUpMini className=\"text-ui-fg-subtle\" />\n                {getSortDescriptor(\"asc\", selectedColumn)}\n              </DropdownMenu.RadioItem>\n              <DropdownMenu.RadioItem\n                onSelect={(e) => e.preventDefault()}\n                value=\"true\"\n                className=\"flex items-center gap-2\"\n              >\n                <ArrowDownMini className=\"text-ui-fg-subtle\" />\n                {getSortDescriptor(\"desc\", selectedColumn)}\n              </DropdownMenu.RadioItem>\n            </DropdownMenu.RadioGroup>\n          </React.Fragment>\n        )}\n      </DropdownMenu.Content>\n    </DropdownMenu>\n  )\n}\nDataTableSortingMenu.displayName = \"DataTable.SortingMenu\"\n\nfunction getSortLabel(column: DataTableColumn<any, unknown>) {\n  const meta = column.columnDef.meta as\n    | DataTableSortableColumnDefMeta\n    | undefined\n  let headerValue: string | undefined = undefined\n\n  if (typeof column.columnDef.header === \"string\") {\n    headerValue = column.columnDef.header\n  }\n\n  return meta?.___sortMetaData?.sortLabel ?? headerValue ?? column.id\n}\n\nfunction getSortDescriptor(\n  direction: \"asc\" | \"desc\",\n  column?: DataTableColumn<any, unknown>\n) {\n  if (!column) {\n    return null\n  }\n\n  const meta = column.columnDef.meta as\n    | DataTableSortableColumnDefMeta\n    | undefined\n\n  switch (direction) {\n    case \"asc\":\n      return meta?.___sortMetaData?.sortAscLabel ?? \"A-Z\"\n    case \"desc\":\n      return meta?.___sortMetaData?.sortDescLabel ?? \"Z-A\"\n  }\n}\n\nconst DataTableSortingMenuSkeleton = () => {\n  return <Skeleton className=\"size-7\" />\n}\n\nexport { DataTableSortingMenu }\nexport type { DataTableSortingMenuProps }\n"]}